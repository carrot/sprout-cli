#!/usr/bin/env node

var CLI = require('./../lib')
  , pkg = require('./../package.json')
  , ArgParse = require('argparse').ArgumentParser;

/*
 * Create argument parser.
 */

var parser = new ArgParse({
  version: pkg.version,
  description: pkg.description,
  addHelp: true
});

/*
 * Create argument subparser.
 */

var subParser = parser.addSubparsers({
  title: 'Actions',
  dest: 'action'
});

/*
 * $ sprout add
 */

var add = subParser.addParser('add', { aliases: ['install'], addHelp: true });
add.addArgument(['name'], { help: 'name of template' });
add.addArgument(['src'], { help: 'source path or remote git' });
add.addArgument(['-v', '--verbose'], { action: 'storeTrue', help: 'verbose mode' });
add.setDefaults({ action: 'add' });

/*
 * $ sprout remove
 */

var remove = subParser.addParser('remove', { aliases: ['delete', 'rm'], addHelp: true });
remove.addArgument(['name'], { help: 'name of template' });
remove.addArgument(['-v', '--verbose'], { action: 'storeTrue', help: 'verbose mode' });
remove.setDefaults({ action: 'remove' });

/*
 * $ sprout list
 */

var list = subParser.addParser('list', { aliases: ['ls', 'all'], addHelp: false });
list.setDefaults({ action: 'list' });

/*
 * $ sprout init
 */

var init = subParser.addParser('init', { aliases: ['new', 'create'], addHelp: true });
init.addArgument(['name'], { help: 'name of template' });
init.addArgument(['target'], { help: 'destination path' });
init.addArgument(['-l', '--locals'], { nargs: '*', help: 'locals' });
init.addArgument(['-t', '--tag'], { help: 'git tag' });
init.addArgument(['-b', '--branch'], { help: 'git branch' });
init.addArgument(['-c', '--config'], { help: 'a config file with pre-defined values (either json or yml/yaml)' });
init.addArgument(['-v', '--verbose'], { action: 'storeTrue', help: 'verbose mode' });
init.setDefaults({ action: 'init' });

/*
 * $ sprout run
 */

var run = subParser.addParser('run', { aliases: ['generate'], addHelp: true });
run.addArgument(['name'], { help: 'name of template' });
run.addArgument(['generator'], { help: 'name of generator to run' });
run.addArgument([], { nargs: '*', dest: 'args', help: 'arguments' });
run.addArgument(['-t', '--target'], { help: 'destination path' });
run.addArgument(['-v', '--verbose'], { action: 'storeTrue', help: 'verbose mode' });
run.setDefaults({ action: 'run' });

/*
 * Parse arguments.
 */

var args = parser.parseArgs()

/*
 * Remove constructor options
 * from parsed arguments and
 * add to an `options` object.
 */

var options = {};

options.verbose = args.verbose;
delete args.verbose;

/*
 * Run CLI with arguments.
 */

var cli = new CLI(process.cwd(), options);
cli.run(args).catch(
  function () {
    process.exit(1);
  }
);
